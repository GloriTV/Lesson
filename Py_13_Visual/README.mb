Добрый день!
Проделана большая работа по анализу и визуализации данных. Вы продкутивно поработали над поставленной задачей.
Отдельно хочу отметить:
1.	Библиотеки импортированы в начале работы.
2.	Здорово, что попробовали различные типы графиков и продуктивно поработали с библиотекой plotly.express, а также написали обстоятельные выводы. 
3.	Хороший подход к решению задачи, что добавили описание данных.
4.	Большой плюс, что графики подписаны, это очень важно при создании отчётов и статей в реальных проектах.
5.	Хорошо, что выводы написаны в ячейках типа markdown, а не комментариями в коде.
6.	Хорошо, что в задании №9.5 отмечено, что только у ушедших клиентов рейтинг ниже 400.
7.	Прекрасно, что преобразованы категориальные признаки с 0 / 1 в осмысленные подписи. 
8.	Отлично, что работа выполнена в одном стиле. 
Однако, есть пробелы в работе, которым нужно уделить внимание: 
•	В задании №9.2 вывод можно также дополнить: распределение похоже на нормальное.
•	В задании 9.3 можно построить гистограмму распределения, на ней хорошо видно большое количество клиентов с нулевым балансом. Следует это отметить в выводе.
•	В задании №9.5 необходимо построить диаграмму рассеивания, на ней видно отсутствие явной взаимосвязи. Вывод можно дополнить, отметив, что только у ушедших клиентов есть рейтинг ниже 400. 
•	В задании 9.9 проще считать средний отток по странам таким образом:
churn_countryes = data.groupby(['Geography'])[['Exited']].mean()
•	В Задание №9.10 график построен неверно. Возможный вариант построения:
 churn_df['CreditScoreCat'] = churn_df['CreditScore'].apply(get_credit_score_cat)
churn_df['Clients_Out'] = churn_df['Exited'].astype(int)

grouped_by_CreditScoreCat = churn_df.pivot_table(
    values='Clients_Out',
    index='CreditScoreCat',
    columns='Tenure',
    aggfunc='mean'
)
#print(grouped_by_CreditScoreCat)

heatmap = sns.heatmap(data=grouped_by_CreditScoreCat, cmap='YlGnBu')
heatmap.set_title('Доля ушедших клиентов по рейтингу и годам пользования услугами банка', fontsize=16);
•	В конце работы сделать общий вывод.

Что можно улучшить еще и ссылки на полезные материалы:
•	В работе лучше добавлять комментарии в коде, это пригодиться в последующем при работе.
https://pythoninfo.ru/osnovy/kommentarii-v-python
https://codecamp.ru/blog/python-comments-and-documentation/
•	Работу можно представить через GitHub, хорошо оформленный профиль может стать вашим портфолио для демонстрации работодателям.
•	При оформлении любых работ на github крайне желательно описывать их содержание (цели и задачи) в файле README.md 
https://habr.com/ru/post/269883/
•	Статьи по оформлению профиля на GitHub:
https://tproger.ru/articles/how-to-prepare-your-github-profile/
https://techrocks.ru/2020/05/13/make-your-github-profile-helpful-in-finding-job/
•	Чтобы упростить задачу с PEP8 (стандарт написания кода), можно воспользоваться инструментами-помощниками:
https://habr.com/ru/company/dataart/blog/318776/
https://habr.com/ru/post/251531/ 

Подводя итоги, вижу, что вы хорошо постарались и есть куда расти. Обратите внимание, пожалуйста, на комментарии по доработке. Это поможет вам прокачать свои навыки и улучшить вашу работу. Иногда кажется, что изучение этой профессии – сложный процесс, но поверьте, с течением времени вы будете становится сильнее. Все интересное впереди!
Если возникнут вопросы, можете обратиться в канал DST_м_01_python_13 в Пачке, постараемся на всё ответить и разобраться с моментами, которые вызывают трудности.
Отзыв подготовил ментор Дмитрий Круглов
Удачи в обучении!